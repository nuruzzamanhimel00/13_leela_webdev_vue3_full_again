{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"User Details:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" <p>name: {{userDetais.name}}</p>\\r\\n        <p>age: {{userDetais.age}}</p> \"), _createElementVNode(\"p\", null, \"name: \" + _toDisplayString($setup.user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"age : \" + _toDisplayString($setup.user.age), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $setup.onChangeName && $setup.onChangeName(...args), [\"prevent\"]))\n  }, \"Change name\")]);\n}","map":{"version":3,"mappings":";gCAESA,oBAAsB,YAAlB,eAAa;;;uBADtBC,oBAOM,cANDC,UAAsB,EACvBC,mGACkC,EAClCH,oBAA4B,WAAzB,QAAM,oBAAGI,WAAI,CAACC,IAAI,kBACrBL,oBAA8B,WAA3B,QAAO,oBAAGI,WAAI,CAACE,GAAG,kBACxBN,oBAA0D;IAAjDO,OAAK,wDAAUH,mDAAY;KAAE,aAAW","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","name","age","onClick"],"sourceRoot":"","sources":["E:\\xampp\\htdocs\\13_leela_webdev_vue3_full_again\\vue_composition_api\\src\\components\\UserData.vue"],"sourcesContent":["<template>\r\n    <div>\r\n         <h1>User Details:</h1>\r\n        <!-- <p>name: {{userDetais.name}}</p>\r\n        <p>age: {{userDetais.age}}</p> -->\r\n        <p>name: {{ user.name }}</p>\r\n        <p>age :  {{ user.age  }} </p>\r\n     <button @click.prevent=\"onChangeName\">Change name</button>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive } from '@vue/reactivity';\r\nexport default {\r\n    name:\"UserData\",\r\n    props:{\r\n        userDetais:{\r\n            required: true\r\n        }\r\n    },\r\n    setup(props){\r\n        const user  = reactive(props.userDetais);\r\n\r\n        function onChangeName(){\r\n            user.name = \" modified name is Himel\";\r\n        }\r\n        console.log(user);\r\n        return {\r\n            user,\r\n            onChangeName\r\n        }\r\n        \r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}